#include<iostream>
#include<malloc.h>
using namespace std;

struct node{
    int data;
    struct node *left;
    struct node *right;
};
struct node* start=NULL;
struct node* getnode(int val){
    struct node* temp=(struct node*)malloc(sizeof(struct node));
    temp->data=val;
    temp->left=NULL;
    temp->right=NULL;
    return temp;

}

int height(struct node *root1){
    if (root1==NULL)
       return 0;
    int lh=height(root1->left);
    int rh=height(root1->right);
    int mx=max(lh,rh);
    return (mx+1);   
}

int dia(struct node* root){
    if (root==NULL)
       return 0;
    int left_height=height(root->left);
    int right_height=height(root->right);
    int ldia=dia(root->left);
    int rdia=dia(root->right);
    return max((left_height+right_height+1),max(ldia,rdia));

}


int main(){
    int n,m;
    cin>>n>>m;
    start=getnode(m);
    struct node *ptr;
    char str[1000];
    while (--n){
        cin>>str>>m;
        ptr=start;
        int i=0;
        while(str[i] && ptr){
            if (str[i]=='L'){
                if (ptr->left==NULL)
                   ptr->left=getnode(0);
                ptr=ptr->left;   
            }
            else {
                if (ptr->right==NULL)
                    ptr->right=getnode(0);
                ptr=ptr->right;    
                
            }
            i++;
        }
        ptr->data=m;
    }

    int ans=dia(start);
    cout<<ans<<endl;
    return 0;
}
